plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp' version '1.6.10-1.0.2'
}

android {
    namespace 'com.LCDP.marvelwiki'
    compileSdk 33

    defaultConfig {
        applicationId "com.LCDP.marvelwiki"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material:material:1.1.1'
    implementation "androidx.navigation:navigation-compose:2.5.3"
    implementation "androidx.compose.runtime:runtime:1.0.0"
    implementation "androidx.compose.runtime:runtime-livedata:1.0.0"

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'

    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    /*  RETROFIT
        La prima dipendenza importa la libreria Retrofit stessa, che fornisce un'interfaccia semplice
        per definire le richieste e le risposte delle API, oltre a gestire automaticamente la conversione
        dei dati tra i formati JSON e oggetti Kotlin.

        La seconda dipendenza importa il convertitore Gson per Retrofit: è una libreria che converte
        automaticamente gli oggetti Kotlin in formato JSON e viceversa.

        La terza dipendenza importa il logging interceptor di OkHTTP, che permette il debug delle
        risposte HTTP.
     */
    implementation 'com.squareup.retrofit2:retrofit:2.9.0' //TODO aggiornare versione?
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0' //TODO aggiornare versione?
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"

    /*  ROOM
        La prima dipendenza importa la libreria Root Runtime. Fornisce le funzionalità principali di
        Room, tra cui le annotazioni per definire le entità del database, i DAO (Data Access Object)
        per l'accesso ai dati e le classi di database principali per l'interazione con il database SQLite.

        La seconda dipendenza specifica il plugin Kapt (Kotlin Annotation Processing Tool), utilizzato
        per elaborare le annotazioni Room durante la compilazione del progetto, generando il codice
        necessario per l'accesso al database.
     */
    def room_version = "2.5.2"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    /*  GLIDE
        La prima dipendenza importa la libreria Glide, che semplifica il caricamento, la memorizzazione
        nella cache e la visualizzazione delle immagini da varie fonti come URL, file, risorse o bitmap.

        La seconda dipendenza specifica il compilatore di Glide, utilizzato per elaborare le annotazioni
        di Glide durante la compilazione del progetto e generare il codice necessario per il caricamento
        e la visualizzazione delle immagini con Glide.
     */
    implementation 'com.github.bumptech.glide:glide:4.12.0' //TODO aggiornare versione?
    kapt 'com.github.bumptech.glide:compiler:4.12.0' //TODO aggiornare versione?


    /*  GIF
        Questa dipendenza importa la libreria GifDrawable, che consente di visualizzare immagini GIF in modo
        nativo nelle applicazioni Android.
     */
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.17' //TODO aggiornare versione?

    //TODO Forse occorre scambiare l'ordine delle dipendenze


    implementation 'io.github.raamcosta.compose-destinations:core:1.1.2-beta'
    ksp 'io.github.raamcosta.compose-destinations:ksp:1.1.2-beta'




}